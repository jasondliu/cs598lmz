from types import FunctionType
a = (x for x in [1])
print(type(a))

b = lambda x:x
print(type(b))

c = FunctionType
print(type(c))
# all()
# any()
# ascii()
# bin()
# bool()
# classmethod()
# compile()
# complex()
# delattr()
# dict()
# dir()
# divmod()
# enumerate()
# eval()
# exec()
# filter()
# float()
# format()
# frozenset()
# getattr()
# globals()
# hasattr()
# hash()
# help()
# hex()
# id()
# input()
# int()
# isinstance()
# issubclass()
# iter()
# len()
# list()
# locals()
# map()
# max()
# memoryview()
# min()
# next()
# object()
# oct()
# open()
# ord()
# pow()
# print()
# property()
# range()
# repr()
# reversed()
# round()
# set()

