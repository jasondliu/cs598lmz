from types import FunctionType
a = (x for x in [1])
print(type(a))
print(type(0))
print(type(None))
print(type(abs))
print(type(a) == types.GeneratorType)
print(type(a) == types.LambdaType)
print(type(x for x in range(10)))
print(type((x for x in range(10))))
print(type(100))
print(type('str'))
print(type(b'byte'))
print(type(dict()))
print(type(set()))
print(type(list()))
print(type(tuple()))
print(type(FunctionType))
print(type(abs) == types.BuiltinFunctionType)
print(type(lambda x: x) == types.LambdaType)
print(type((x for x in range(10))) == types.GeneratorType)
print(type(x for x in range(10)) == types.GeneratorType)

# isinstance()
# 判断类型是否继承自某
