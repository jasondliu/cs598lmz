from types import FunctionType
a = (x for x in [1])
b = (x for x in [2])
print(a == b)
print(a is b)
print(type(a))
print(type(b))
print(a.__next__())
print(b.__next__())
print(type(lambda x: x))
print(type(abs))
print(type(FunctionType))
print(type(lambda x: x) == type(abs))
print(type(lambda x: x) == type(FunctionType))
print(type(abs) == type(FunctionType))
print(type(abs) == FunctionType)
print(FunctionType == type(abs))
print(FunctionType == type(FunctionType))
print(FunctionType == type(lambda x: x))
print(FunctionType == type((x for x in [1])))
print(FunctionType == type(int))
print(FunctionType == type(str))
print(FunctionType == type(list))
print(FunctionType == type(tuple))
print(FunctionType == type(dict))
print(FunctionType == type(set))
print(FunctionType == type
