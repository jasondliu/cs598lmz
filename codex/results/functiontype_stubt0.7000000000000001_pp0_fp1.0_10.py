from types import FunctionType
a = (x for x in [1])
print type(a)
a = lambda x:x
print type(a)
a = type([])
print type(a)
a = type([])()
print type(a)
a = [1, 2, 3]
print type(a)
b = type(a)
print type(b)
a = type(type)
print type(a)
a = type(type([]))
print type(a)
a = FunctionType
print type(a)
a = FunctionType
print type(a)
a = FunctionType(lambda x:x, {})
print type(a), a(3)
a = type(isinstance)
print type(a)
a = type(type)
print type(a)
a = type(type)
print type(a)
a = type(type)
print type(a)
a = type(type)
print type(a)
a = type(type)
print type(a)
a = type(type)
print type(a)
a = type(type)
print type(a)
a = type
