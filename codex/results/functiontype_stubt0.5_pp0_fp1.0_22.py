from types import FunctionType
a = (x for x in [1])
b = (x for x in [1])
print(a==b)
print(type(a))
print(FunctionType)
print(type(abs)==types.BuiltinFunctionType)
print(type(lambda x:x)==types.LambdaType)
print(type((x for x in [1]))==types.GeneratorType)
print(isinstance([1,2,3],Iterable))
print(isinstance([1,2,3],Iterator))
print(isinstance((x for x in [1]),Iterator))
print(isinstance(iter([]),Iterator))
print(isinstance(iter([]),Iterable))
print(isinstance([],Iterable))
print(isinstance([],Iterator))
print(isinstance({},Iterable))
print(isinstance({},Iterator))
print(isinstance('abc',Iterable))
print(isinstance('abc',Iterator))
print(isinstance((x for x in [1]),Iterable))
print(isinstance((x for x in [1]),Iterator))
print(isinstance(100,Iterable))

