fn = lambda: None
gi = (i for i in ())
fn.__code__ = gi

class A:
    def __init__(self,x):
        self.x = x

    def __iter__(self):
        return fn

for i in A(1):
    print i
    for j in A(2):
        print j
        for k in A(3):
            print k
            for l in A(4):
                print l
                for m in A(5):
                    print m
                    for n in A(6):
                        print n
                        for o in A(7):
                            print o
                            for p in A(8):
                                print p
                                for q in A(9):
                                    print q
                                    for r in A(10):
                                        print r
</code>
This is "optimized code" or "byte code", generated by the compiler. It's typically not meant for human consumption, but for the interpreter to execute.

