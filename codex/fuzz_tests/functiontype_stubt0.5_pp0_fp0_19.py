from types import FunctionType
a = (x for x in [1])
b = [x for x in [1]]
c = {x for x in [1]}
d = {x: x for x in [1]}
e = FunctionType(lambda x: x, globals())
f = type(lambda x: x)
g = type(e)
h = type(f)
i = type(g)
j = type(h)
k = type(i)
l = type(j)
m = type(k)
n = type(l)
o = type(m)
p = type(n)
q = type(o)
r = type(p)
s = type(q)
t = type(r)
u = type(s)
v = type(t)
w = type(u)
x = type(v)
y = type(w)
z = type(x)
a1 = type(y)
b1 = type(z)
c1 = type(a1)
d1 = type(b1)
e1 = type(c1)
f1 = type(d1)
g1 =
