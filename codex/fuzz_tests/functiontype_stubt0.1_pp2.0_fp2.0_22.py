from types import FunctionType
a = (x for x in [1])
print(type(a))
print(type(lambda x: x))
print(type(FunctionType))
print(type(FunctionType(lambda x: x, globals())))
print(type(FunctionType(lambda x: x, globals())(1)))
print(type(FunctionType(lambda x: x, globals())(1)) == int)
print(type(FunctionType(lambda x: x, globals())(1)) == type(1))
print(type(FunctionType(lambda x: x, globals())(1)) == type(int))
print(type(FunctionType(lambda x: x, globals())(1)) == type(type(1)))
print(type(FunctionType(lambda x: x, globals())(1)) == type(type(int)))
print(type(FunctionType(lambda x: x, globals())(1)) == type(type(type(1))))
print(type(FunctionType(lambda x: x, globals())(1)) == type(type(type(int))))
print(type(FunctionType(lambda x: x, globals()
