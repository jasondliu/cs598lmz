from types import FunctionType
a = (x for x in [1])
print(type(a))
print(type(lambda x: x))
print(isinstance(a, FunctionType))
print(isinstance(lambda x: x, FunctionType))
print(isinstance(a, collections.Iterable))
print(isinstance([1], collections.Iterable))
print(isinstance([1], collections.Iterable))
print(isinstance(a, collections.Iterator))
print(isinstance([1].__iter__(), collections.Iterator))
print(isinstance([1], collections.Iterator))
print(isinstance(1, collections.Iterator))
print(isinstance(1, collections.Iterable))
print(isinstance([1], collections.Iterator))
print(isinstance([1], collections.Iterator))
# print(isinstance([1], collections.Iterator))
# print(isinstance([1], collections.Iterator))
# print(isinstance([1], collections.Iterator))
# print(isinstance([1], collections.Iterator))
# print(isinstance([1], collections.Iterator))
# print(isinstance([1], collections.Iterator))
# print(isinstance([
