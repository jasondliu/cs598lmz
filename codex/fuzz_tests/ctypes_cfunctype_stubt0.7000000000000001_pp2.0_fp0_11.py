import ctypes
FUNTYPE = ctypes.CFUNCTYPE(ctypes.py_object)
@FUNTYPE
def fun():
    return -1

def f():
    return fun()
print(f())
</code>
This results in an error (in CPython):
<code>SystemError: &lt;built-in function fun&gt; returned a result with an error set
</code>
This makes sense, since a <code>Py_ssize_t</code> really should not be used as a Python <code>int</code> type.  You can also see that the error is generated by the <code>PyInt_FromLong()</code> function in <code>_ctypes/callproc.c</code>.  (Or <code>PyLong_FromLong()</code> in Python 3).

