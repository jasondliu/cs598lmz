from types import FunctionType
a = (x for x in [1])
print(a)
print(type(a))
print(type(FunctionType))
print(type(x for x in range(10)))
print(type(lambda x:x))
print(type(abs))
print(type(a) == type(x for x in range(10)))
print(type(a) == type(lambda x:x))
print(type(a) == type(abs))
print(type(a) == FunctionType)
print(type(a))
print(dir(type(a)))
print(dir(type(lambda x:x)))
print(dir(type(abs)))
print(dir(FunctionType))

print(type(super))
print(type(dict))
print(type(dict) == type)
print(type(dict) == type(list))
print(isinstance(dict, type))
print(isinstance(list, type))

print(type(type))
print(type(type) == type)
print(type(type) == type(list))
print(isinstance(type, type))
print(isinstance(list
