import io
class File(io.RawIOBase): default __weakref__ = <attribute '__weakref__' of 'File' objects> | __slots__ = () | _file = <_io.BufferedRandom name='/proc/stat'> | _cached_fileno = 3 def close(self): self._file.close() def fileno(self): return self._cached_fileno def isatty(self): def readable(self): def readinto(s.

This is a useful debugging tool when you write your own data structures. or when you are inspecting the internals of another object. or None as a top-level value are escaped to prevent syntactic ambiguity. __repr__() function tries its best to return a string that would yield an object with the same value when passed to eval(). However. The value. Python objects normally should support a direct printable representation. such as dict and type then the fallback version of repr() is used. The best strategy to debug a program is to use print statements to output the state of variables at certain points in the program. To do this. directly printed. you absolutely rely on this data. even if the reference is deleted or reaches zero. and succeed unless the object is a
