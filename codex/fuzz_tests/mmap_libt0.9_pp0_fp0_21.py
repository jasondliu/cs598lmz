import mmap import glob import time from azure . keyvault . secrets . aio import SecretClient # Setup Key Vault client = SecretClient ( vault_url = "https://[VAULT_NAME].vault.azure.net" , credentials = DefaultAzureCredential () ) def process_video ( filename ): with open ( filename , 'rb' ) as file : file_mm = mmap . mmap ( file . fileno (), 0 , access = mmap . ACCESS_READ ) # Do things with the file and return a result return result # Get the worker's name worker_name = os . environ [ 'WORKER_NAME' ] names = os . listdir ( os . environ [ 'WORKING_DIR' ]) # Acquire a SAS URL for this particular worker try : secret = client . get_secret ( worker_name ) sas = secret . value except : raise RuntimeError ( f "Could not get secret ' { worker_name } ', please make sure it exists" ) # Create an Azure Storage blob clien from the SAS url obtained from Key Vault try : blob_service_client = BlobServiceClient . from_connection_string ( sas ) except :
