from types import FunctionType
a = (x for x in [1])
print(type(a))
print(isinstance(a, types.GeneratorType))
b = (x for x in [1])
print(type(b))
print(isinstance(b, types.GeneratorType))
c = (x for x in [1])
print(type(c))
print(isinstance(c, types.GeneratorType))
print(a == b)
print(a == c)
print(b == c)
print(hash(a) == hash(b))
print(hash(a) == hash(c))
print(hash(b) == hash(c))

a = (x for x in [1, 2, 3])
print(type(a))
print(isinstance(a, types.GeneratorType))
b = (x for x in [1, 2, 3])
print(type(b))
print(isinstance(b, types.GeneratorType))
c = (x for x in [1, 2, 3])
print(type(c))
print(isinstance(c, types.GeneratorType))
print(a
